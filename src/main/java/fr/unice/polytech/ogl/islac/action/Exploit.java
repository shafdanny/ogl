package fr.unice.polytech.ogl.islac.action;

import java.util.ArrayList;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import fr.unice.polytech.ogl.islac.data.Arena;
import fr.unice.polytech.ogl.islac.data.Ressources;

public class Exploit extends Action {
	
	String ressourceName;
 
	
	// Méthodes exploit
	// Attention: ressource en majuscule: WOOD
	
	public Exploit()
	{
		
	}
	
	public Exploit(String name)
	{
		this.ressourceName=name;
	}
	
	@Override
	public String act(){
		
		
		return "{ \"action\": \"exploit\", \"parameters\": {\""+ressourceName+"\": " +"\""+ ressourceName+"\" " +"} }";
	}

	

	/**
	 * Méthode read de la classe exploit, récupère le nombre de ressource
	 * collecté et le coût en pa.
	 * @param data, act
	 */

	public void read(String data,Action act){
	
		try {
	    	  JSONParser parser=new JSONParser();		  
		      JSONObject obj = (JSONObject)parser.parse(data);
		      JSONObject obj1= (JSONObject)obj.get("extras");

		      
		      long pa=(long)obj.get("cost");
		      long amount=(long)obj1.get("amount");
		      
		      String ressourceName = act.getLastAction().getRessourceName();
		      act.getC().getRessource(ressourceName).addQuantity((int)amount);
		      act.getC().addPa(pa);
		    
		      
		      
		} catch (ParseException e) {
			e.printStackTrace();
	}
	
	}

	/**
	 * Méthode getRessourceName, permet d'obtenir le nom d'une ressource.
	 * @return ressourceName
	 */
	
	
	public String getRessourceName() {
		return ressourceName;
	}

	/**
	 * Méthode setRessourceName, permet de donner un nom à une ressource.
	 * @param ressourceName
	 */
	
	public void setRessourceName(String ressourceName) {
		this.ressourceName = ressourceName;
	}


	
	
}
